version: '3.8'

services:
  # Armazenamento de Dados
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - dataflow-network

  # Apache Spark
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./app:/spark-apps
      - ./data/spark:/opt/spark/work-dir
    networks:
      - dataflow-network

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./app:/spark-apps
      - ./data/spark:/opt/spark/work-dir
    ports:
      - "8081:8081"
    networks:
      - dataflow-network

  # MLflow
  mlflow:
    image: bitnami/mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin123
    command: bash -c "pip install mlflow boto3 pymysql && mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root s3://mlflow/ --backend-store-uri sqlite:////mlflow/mlflow.db"
    volumes:
      - ./data/mlflow:/mlflow
    networks:
      - dataflow-network
    depends_on:
      - minio

  # Prefect
  prefect:
    image: prefecthq/prefect:2-latest
    container_name: prefect
    ports:
      - "4200:4200"
    environment:
      - PREFECT_UI_API_URL=http://localhost:4200/api
      - PREFECT_API_URL=http://localhost:4200/api
    volumes:
      - ./flows:/opt/prefect/flows
      - ./data/prefect:/root/.prefect
    command: prefect server start --host 0.0.0.0 --port 4200
    networks:
      - dataflow-network

  # JupyterHub
  jupyterhub:
    image: jupyterhub/jupyterhub:latest
    container_name: jupyterhub
    ports:
      - "8888:8888"
    volumes:
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
      - ./data/jupyter:/data
      - ./notebooks:/home/jovyan/notebooks
    command: jupyterhub -f /srv/jupyterhub/jupyterhub_config.py
    networks:
      - dataflow-network

  # Streamlit
  streamlit:
    build:
      context: ./config/streamlit
      dockerfile: Dockerfile
    container_name: streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./app:/app
    networks:
      - dataflow-network

  # Airbyte - Usando componentes separados
  airbyte-server:
    image: airbyte/server:build-f2df1414f1-22031-master
    container_name: airbyte-server
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - AIRBYTE_VERSION=build-f2df1414f1-22031-master
      - AIRBYTE_API_HOST=airbyte-server:8001
      - DATABASE_USER=airbyte
      - DATABASE_PASSWORD=password
      - DATABASE_URL=jdbc:postgresql://airbyte-db:5432/airbyte
      - TRACKING_STRATEGY=segment
      - WORKSPACE_ROOT=/data
      - CONFIG_ROOT=/data/configs
    volumes:
      - ./data/airbyte:/data
    depends_on:
      - airbyte-db
    networks:
      - dataflow-network

  airbyte-webapp:
    image: airbyte/webapp:build-f2df1414f1-22031-master
    container_name: airbyte-webapp
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - AIRBYTE_API_SERVER_HOST=airbyte-server
      - AIRBYTE_API_SERVER_PORT=8001
      - TRACKING_STRATEGY=segment
    depends_on:
      - airbyte-server
    networks:
      - dataflow-network

  airbyte-db:
    image: postgres:13
    container_name: airbyte-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=airbyte
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=airbyte
    volumes:
      - ./data/airbyte-db:/var/lib/postgresql/data
    networks:
      - dataflow-network

  airbyte-temporal:
    image: temporalio/auto-setup:1.7.0
    container_name: airbyte-temporal
    restart: unless-stopped
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=airbyte
      - POSTGRES_PWD=password
      - POSTGRES_SEEDS=airbyte-db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    networks:
      - dataflow-network
    depends_on:
      - airbyte-db

networks:
  dataflow-network:
    driver: bridge
