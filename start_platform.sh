#!/bin/bash

# Script de Inicializa√ß√£o Completa da Plataforma DataLab
# Executa todos os servi√ßos e testa a integra√ß√£o

echo "üöÄ Iniciando Plataforma DataLab Unificada..."

# Verificar depend√™ncias
echo "üìã Verificando depend√™ncias..."
python3 --version || { echo "‚ùå Python3 n√£o encontrado"; exit 1; }
docker --version || { echo "‚ùå Docker n√£o encontrado"; exit 1; }
docker-compose --version || { echo "‚ùå Docker Compose n√£o encontrado"; exit 1; }

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p logs
mkdir -p data/{bronze,silver,gold,raw}
mkdir -p models
mkdir -p notebooks/outputs

# Instalar depend√™ncias Python
echo "üì¶ Instalando depend√™ncias Python..."
pip install -r requirements.txt

# Configurar vari√°veis de ambiente
echo "‚öôÔ∏è Configurando ambiente..."
export PYTHONPATH="$PWD:$PWD/app:$PWD/core:$PWD/flows:$PYTHONPATH"

# Inicializar servi√ßos Docker
echo "üê≥ Iniciando servi√ßos Docker..."
docker-compose -f docker-compose.yml up -d --remove-orphans

# Aguardar servi√ßos ficarem prontos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
sleep 30

# Testar conectividade dos servi√ßos
echo "üîç Testando conectividade dos servi√ßos..."

# MinIO
echo "  üì¶ Testando MinIO..."
curl -s http://localhost:9001 > /dev/null && echo "    ‚úÖ MinIO dispon√≠vel" || echo "    ‚ùå MinIO indispon√≠vel"

# Spark UI
echo "  ‚ö° Testando Spark..."
curl -s http://localhost:4040 > /dev/null && echo "    ‚úÖ Spark dispon√≠vel" || echo "    ‚ùå Spark indispon√≠vel"

# Kafka
echo "  üì° Testando Kafka..."
docker-compose exec -T kafka kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null 2>&1 && echo "    ‚úÖ Kafka dispon√≠vel" || echo "    ‚ùå Kafka indispon√≠vel"

# MLflow
echo "  ü§ñ Testando MLflow..."
curl -s http://localhost:5000 > /dev/null && echo "    ‚úÖ MLflow dispon√≠vel" || echo "    ‚ùå MLflow indispon√≠vel"

# JupyterHub
echo "  üìì Testando JupyterHub..."
curl -s http://localhost:8000 > /dev/null && echo "    ‚úÖ JupyterHub dispon√≠vel" || echo "    ‚ùå JupyterHub indispon√≠vel"

# Prefect
echo "  üåä Testando Prefect..."
curl -s http://localhost:4200 > /dev/null && echo "    ‚úÖ Prefect dispon√≠vel" || echo "    ‚ùå Prefect indispon√≠vel"

# Inicializar Prefect flows
echo "üåä Inicializando Prefect flows..."
if [ -f "flows/init_prefect_flows.sh" ]; then
    chmod +x flows/init_prefect_flows.sh
    ./flows/init_prefect_flows.sh
else
    echo "  ‚ö†Ô∏è Script de inicializa√ß√£o do Prefect n√£o encontrado"
fi

# Configurar e testar plataforma unificada
echo "üåü Testando plataforma unificada..."
python3 test_platform.py

# Iniciar Streamlit em segundo plano
echo "üìä Iniciando dashboard Streamlit..."
nohup streamlit run app/app.py --server.port 8501 --server.address 0.0.0.0 > logs/streamlit.log 2>&1 &
echo $! > logs/streamlit.pid

# Aguardar Streamlit inicializar
sleep 10

# Testar Streamlit
curl -s http://localhost:8501 > /dev/null && echo "    ‚úÖ Streamlit dispon√≠vel" || echo "    ‚ùå Streamlit indispon√≠vel"

echo ""
echo "üéâ Inicializa√ß√£o da Plataforma DataLab Conclu√≠da!"
echo ""
echo "üìä Acesse os servi√ßos:"
echo "  ‚Ä¢ Dashboard Streamlit: http://localhost:8501"
echo "  ‚Ä¢ MinIO Console: http://localhost:9001 (admin/password123)"
echo "  ‚Ä¢ MLflow UI: http://localhost:5000"
echo "  ‚Ä¢ JupyterHub: http://localhost:8000 (admin/admin)"
echo "  ‚Ä¢ Prefect UI: http://localhost:4200"
echo "  ‚Ä¢ Spark UI: http://localhost:4040"
echo ""
echo "üõ†Ô∏è Comandos √∫teis:"
echo "  ‚Ä¢ python datalab_cli.py --help                 # CLI da plataforma"
echo "  ‚Ä¢ python datalab_manager.py                    # Gerenciador principal"
echo "  ‚Ä¢ python test_platform.py                      # Testes da plataforma"
echo "  ‚Ä¢ docker-compose logs -f [service]             # Logs de servi√ßos"
echo "  ‚Ä¢ python flows/medallion_etl_flow.py           # Executar ETL"
echo ""
echo "üîß Para parar todos os servi√ßos:"
echo "  ‚Ä¢ ./shutdown_platform.sh"
echo ""
